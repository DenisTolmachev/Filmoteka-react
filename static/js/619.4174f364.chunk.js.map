{"version":3,"file":"static/js/619.4174f364.chunk.js","mappings":"uOAGaA,EAAqBC,EAAAA,GAAAA,IAAH,wPAclBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+CAIVG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,4JAUXK,EAAeL,EAAAA,GAAAA,OAAH,ib,mBCtBZM,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,SAACR,EAAD,WACE,SAAC,KAAD,CACES,cAAe,CAAEC,MAAO,IACxBF,SAAU,SAACG,EAAQC,GACjBJ,EAASG,EAAOD,OAChBE,EAAQC,aAJZ,SAOG,SAAAC,GAAK,OACJ,UAACZ,EAAD,YACE,SAACI,EAAD,CAAcS,KAAK,SAAnB,UACE,SAAC,MAAD,OAEF,SAACX,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,YAAY,gBACZC,MAAON,EAAMH,OAAOD,MACpBW,SAAUP,EAAMQ,wB,iDC7BjBC,EAAc,CACzBb,MAAO,IAIIc,EAAa,mCAAG,+GAEFC,EAAAA,EAAAA,IAAQ,gBAAiB,CAAEC,OAAQH,IAFjC,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBC,QAAQC,IAAR,MALyB,yDAAH,qDC6B1B,EAhCe,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEAJ,QAAQC,IAAI,cAAeE,IAEzBE,EAAAA,EAAAA,YAAU,WACc,KAAhBF,GAGAP,EAAc,CAACd,MAAOqB,IAAcG,MAAK,SAAAC,GACrCP,QAAQC,IAAIM,QAGrB,CAACJ,IAWN,OACE,4BACE,SAACxB,EAAD,CAAWC,SAVU,SAAAuB,GACI,KAAvBA,EAAYK,OACdR,QAAQC,IAAI,wBAEZG,EAAeD,OAOf,6C,mEC5BON,E,MAAMY,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBZ,OAAQ,CACNa,QCLmB","sources":["components/SearchBar/SearchBar.style.js","components/SearchBar/SearchBar.jsx","services/getFilmsByKey.js","pages/Movies/Movies.jsx","services/api.js","constants/apiConst.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchbarContainer = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled(Form)`\n  position: relative;\n`;\n\nexport const SearchInput = styled(Field)`\n  outline: none;\n  height: 30px;\n  width: 300px;\n  border: 0;\n  border-radius: 6px;\n  padding-left: 10px;\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: block;\n  position: absolute;\n  right: 0;\n  width: 30px;\n  height: 32px;\n  border: 0;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import {\n  SearchbarContainer,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBar.style';\nimport { Formik } from 'formik';\nimport { RiSearchLine } from 'react-icons/ri';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <SearchbarContainer>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={(values, actions) => {\n          onSubmit(values.query);\n          actions.resetForm();\n        }}\n      >\n        {props => (\n          <SearchForm>\n            <SearchButton type=\"submit\">\n              <RiSearchLine />\n            </SearchButton>\n            <SearchInput\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              name=\"query\"\n              placeholder=\"Search movies\"\n              value={props.values.query}\n              onChange={props.handleChange}\n            />\n          </SearchForm>\n        )}\n      </Formik>\n    </SearchbarContainer>\n  );\n};\n","import { api } from './api';\n\nexport const filmsParams = {\n  query: '',\n  // page: 1,\n};\n\nexport const getFilmsByKey = async () => {\n  try {\n    const { data } = await api.get('/search/movie', { params: filmsParams });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { getFilmsByKey } from 'services/getFilmsByKey';\n\nconst Movies = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  console.log('searchValue', searchValue);\n\n    useEffect(() => {\n        if (searchValue === '') {\n            return;\n        } else {\n            getFilmsByKey({query: searchValue}).then(result => {\n                console.log(result);\n            });\n        }\n    }, [searchValue]);\n\n\n  const handleFormSubmit = searchValue => {\n    if (searchValue.trim() === '') {\n      console.log('enter a search value');\n    } else {\n      setSearchValue(searchValue);\n    }\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <div>MoviesList</div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';"],"names":["SearchbarContainer","styled","SearchForm","Form","SearchInput","Field","SearchButton","Searchbar","onSubmit","initialValues","query","values","actions","resetForm","props","type","autoComplete","autoFocus","name","placeholder","value","onChange","handleChange","filmsParams","getFilmsByKey","api","params","data","console","log","useState","searchValue","setSearchValue","useEffect","then","result","trim","axios","baseURL","api_key"],"sourceRoot":""}