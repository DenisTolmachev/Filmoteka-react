{"version":3,"file":"static/js/68.1ff0cd70.chunk.js","mappings":"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","sources":["components/common/BackLink.js","services/getDataFilms.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/Genres/Genres.style.js","components/MovieCard/Genres/Genres.jsx","components/MovieCard/MovieCard.jsx","components/DetailsAction/DetailsAction.style.js","components/DetailsAction/DetailsAction.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","constants/apiConst.js","utils/toastState.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  padding: 8px 10px;\n  margin-bottom: 10px;\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: ${({ theme }) => theme.colors.white};\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import { api } from './api';\nimport { toastError } from 'utils/toastState';\n\nexport const getDataFilms = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}`);\n\n    return data;\n  } catch (error) {\n    toastError();\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieCardImage = styled.img`\n  width: 250px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const MovieCardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.ml1};\n`;\n\nexport const MovieCardScore = styled.p`\n  padding-top: 30px;\n  padding-bottom: 15px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\n  & span {\n    font-weight: ${({ theme }) => theme.fontWeights.bold};\n  }\n`;\n\nexport const MovieCardOverwiew = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\n`;\n\nexport const MovieCardOverwiewTitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const MovieCardOverwiewText = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  margin-top: 10px;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\n\nexport const GenresContainer = styled.div`\n  margin-top: 15px;\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const GenresList = styled.ul`\nlist-style-type: circle;\nmargin: 10px 20px;\npadding: 0;\n`;\n\nexport const GenresItem = styled.li`\nmargin-top: 5px;\n`;\n","import { GenresContainer, GenresTitle, GenresList, GenresItem } from \"./Genres.style\"\n\nexport const Genres = ({ genres }) => {\n    return (\n        <GenresContainer>\n            <GenresTitle>Genres:</GenresTitle>\n            <GenresList>\n            {genres.map(genre => (\n                <GenresItem key={genre.id}>{genre.name}</GenresItem>\n            ))}\n            </GenresList>\n        </GenresContainer>\n    )\n}","import {\n  MovieCardContainer,\n  MovieCardImage,\n  MovieCardTitle,\n  MovieCardScore,\n  MovieCardOverwiew,\n  MovieCardOverwiewTitle,\n  MovieCardOverwiewText,\n  CardInformation,\n} from './MovieCard.styled';\nimport { Genres } from 'components/MovieCard/Genres/Genres';\n\nexport const MovieCard = ({ movie }) => {\n\n  \n  return (\n    <MovieCardContainer>\n      <MovieCardImage\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <CardInformation>\n        <MovieCardTitle>\n          {movie.title}({new Date(movie.release_date).getFullYear()})\n        </MovieCardTitle>\n        <MovieCardScore>\n          <span>User Score: </span>\n          {movie.vote_average}\n        </MovieCardScore>\n        <MovieCardOverwiew>\n          <MovieCardOverwiewTitle>Overview: </MovieCardOverwiewTitle>\n          <MovieCardOverwiewText>{movie.overview}</MovieCardOverwiewText>\n        </MovieCardOverwiew>\n        <Genres genres={movie.genres} />\n      </CardInformation>\n    </MovieCardContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsActionStyle = styled.div`\n  display: flex;\n  justify-content: start;\n  padding: 20px 0;\n  gap: 5px;\n`;\n\nexport const LinkStyle = styled(NavLink)`\n  display: flex;\n  color: ${({ theme }) => theme.colors.primary};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  padding: 5px;\n  border-radius: 5px;\n  text-transform: uppercase;\n\n  &.active {\n    background-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.white};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconsole.log('test2');","import { DetailsActionStyle, LinkStyle } from './DetailsAction.style';\nimport { useLocation } from 'react-router-dom';\n\nexport const DetailsAction = () => {\n  const location = useLocation().state?.from;\n\n  return (\n    <DetailsActionStyle>\n      <LinkStyle to={'cast'} state={{ from: location }}>\n        Cast\n      </LinkStyle>\n      <LinkStyle to={'reviews'} state={{ from: location }}>\n        Reviews\n      </LinkStyle>\n    </DetailsActionStyle>\n  );\n};\n","import { useLocation, Outlet, useParams } from 'react-router-dom';\n\nimport { BackLink } from 'components/common/BackLink';\nimport { Suspense, useEffect, useState } from 'react';\nimport { getDataFilms } from 'services/getDataFilms';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { LoaderSpinner } from 'components/common/Loader/Loader';\nimport { DetailsAction } from 'components/DetailsAction/DetailsAction';\n\nconst MovieDetails = () => {\n  const [movieId, setMovieId] = useState(null);\n  const { moviesId } = useParams();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    getDataFilms(moviesId).then(result => {\n      setMovieId(result);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      <BackLink to={location}>&#8678; Back to movies</BackLink>\n      {movieId && (\n        <>\n          <MovieCard movie={movieId} />\n          <DetailsAction />\n          <Suspense fallback={<LoaderSpinner />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';","import { toast } from 'react-toastify';\n\nexport const toastWarning =() => {\n    toast.warn('Enter a movie title!', {\n        position: \"top-center\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}\n\nexport const toastError =() => {\n    toast.error('Service error!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}"],"names":["BackLink","styled","Link","theme","colors","primary","white","secondary","getDataFilms","id","api","data","toastError","MovieCardContainer","MovieCardImage","MovieCardTitle","fontSizes","ml1","MovieCardScore","m","fontWeights","bold","MovieCardOverwiew","MovieCardOverwiewTitle","MovieCardOverwiewText","CardInformation","GenresContainer","GenresTitle","GenresList","GenresItem","Genres","genres","map","genre","name","MovieCard","movie","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","overview","DetailsActionStyle","LinkStyle","NavLink","console","log","DetailsAction","location","useLocation","state","from","to","useState","movieId","setMovieId","moviesId","useParams","useEffect","then","result","Suspense","fallback","Loader","axios","baseURL","params","api_key","toastWarning","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}