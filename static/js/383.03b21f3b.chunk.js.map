{"version":3,"file":"static/js/383.03b21f3b.chunk.js","mappings":"2NAEaA,EAAgBC,EAAAA,GAAAA,GAAH,iKASbC,EAAgBD,EAAAA,GAAAA,GAAH,2YAebE,EAAqBF,EAAAA,GAAAA,EAAH,kHAIhB,qBAAGG,MAAkBC,YAAYC,QACnC,qBAAGF,MAAkBG,UAAUC,KAG/BC,EAAiBR,EAAAA,GAAAA,IAAH,8IAOdS,EAAmBT,EAAAA,GAAAA,IAAH,qGAEd,qBAAGG,MAAkBG,UAAUI,MAC7B,qBAAGP,MAAkBC,YAAYC,QACvC,qBAAGF,MAAkBQ,OAAOC,W,SCpC1BC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACjB,EAAD,UACqB,IAAlBe,EAAOG,OACNH,EAAOI,KAAI,SAAAC,GAAK,OACd,UAAClB,EAAD,YACE,SAAC,KAAD,CAAMmB,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,UACE,SAACP,EAAD,CACEgB,IACEL,EAAMM,YACF,kCAAoCN,EAAMM,YAC1C,qHAENC,IAAKP,EAAMQ,WAGf,SAACzB,EAAD,UAAqBiB,EAAMQ,UAXTR,EAAME,QAe5B,SAACZ,EAAD,gE,oEC9BGmB,E,QAAY5B,GAAAA,GAAH,sFAGb,qBAAGG,MAAkBQ,OAAOkB,c,0ICFxBC,EAAW,CACpBC,KAAM,GAGKC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,kBAA2B,CAAEC,OAAQJ,IAFhC,uBAEpBK,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,iCAK5BC,EAAAA,EAAAA,KAL4B,yDAAH,qD,6BCe/B,EAjBsB,WACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRR,IAAmBS,MAAK,SAAAN,GACtBI,EAAeJ,EAAKO,cAErB,KAGD,iCACE,SAAC,IAAD,wBACA,SAAC7B,EAAA,EAAD,CAAYC,OAAQwB,S,mECdbL,E,MAAMU,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBV,OAAQ,CACNW,QCLmB,uC,0FCCVC,EAAc,WACvBC,EAAAA,GAAAA,KAAW,uBAAwB,CAC/BC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAILnB,EAAY,WACrBW,EAAAA,GAAAA,MAAY,iBAAkB,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC","sources":["components/MoviesList/MoviesList.style.js","components/MoviesList/MoviesList.jsx","components/common/PageTitle.styled.js","services/getUpComingFilms.js","pages/UpComingFilms/UpComingFilms.jsx","services/api.js","constants/apiConst.js","utils/toastState.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListList = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const MovieListItem = styled.li`\n  cursor: pointer;\n  margin: 10px;\n  margin-bottom: 20px;\n  //flex-basis: calc((100% - 10px) / 5);\n  transform: translateY(0);\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: translateY(-3%);\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const MovieListItemTitle = styled.p`\nwidth: 309px;\ntext-decoration: none;\ncolor: black;\nfont-weight: ${({ theme }) => theme.fontWeights.bold};\nfont-size: ${({ theme }) => theme.fontSizes.m};\n`;\n\nexport const MovieListImage = styled.img`\n  width: 309px;\n  height: 449px;\n  text-decoration: none;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const ErrorFindMessage = styled.div`\ntext-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.ml};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.primary};;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieListList,\n  MovieListItem,\n  MovieListItemTitle,\n  MovieListImage,\n  ErrorFindMessage,\n} from './MoviesList.style';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieListList>\n        {movies.length !== 0 ? (\n          movies.map(movie => (\n            <MovieListItem key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieListImage\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500` + movie.poster_path\n                      : 'https://dummyimage.com/309x449/fff/000000.png&text=%D0%9A%D1%96%D0%BD%D0%B0+%D0%BD%D0%B5+%D0%B1%D1%83%D0%B4%D0%B5!'\n                  }\n                  alt={movie.title}\n                />\n              </Link>\n              <MovieListItemTitle>{movie.title}</MovieListItemTitle>\n            </MovieListItem>\n          ))\n        ) : (\n          <ErrorFindMessage>\n            Films not found, enter the correct request!\n          </ErrorFindMessage>\n        )}\n      </MovieListList>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.h1`\ntext-align: center;\ntext-transform: uppercase;\ncolor: ${({ theme }) => theme.colors.secondary};\n`;\n","import { api } from './api';\nimport { toastError } from 'utils/toastState';\n\nexport const upParams = {\n    page: 1,\n  };\n  \n  export const getUpcomingFilms = async () => {\n    try {\n      const { data } = await api.get(`/movie/upcoming`, { params: upParams });\n      return data;\n    } catch (error) {\n      toastError();\n    }\n  };\n","import { useState, useEffect } from 'react';\nimport { getUpcomingFilms } from 'services/getUpComingFilms';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { PageTitle } from '../../components/common/PageTitle.styled';\n\nconst UpComingFilms = () => {\n  const [searchValue, setsearchValue] = useState([]);\n\n  useEffect(() => {\n    getUpcomingFilms().then(data => {\n      setsearchValue(data.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <PageTitle>Upcoming</PageTitle>\n      <MoviesList movies={searchValue} />\n    </>\n  );\n};\n\nexport default UpComingFilms;","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';","import { toast } from 'react-toastify';\n\nexport const toastWarning =() => {\n    toast.warn('Enter a movie title!', {\n        position: \"top-center\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}\n\nexport const toastError =() => {\n    toast.error('Service error!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}"],"names":["MovieListList","styled","MovieListItem","MovieListItemTitle","theme","fontWeights","bold","fontSizes","m","MovieListImage","ErrorFindMessage","ml","colors","primary","MoviesList","movies","location","useLocation","length","map","movie","to","id","state","from","src","poster_path","alt","title","PageTitle","secondary","upParams","page","getUpcomingFilms","api","params","data","toastError","useState","searchValue","setsearchValue","useEffect","then","results","axios","baseURL","api_key","toastWarning","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}