{"version":3,"file":"static/js/4.853d4bf8.chunk.js","mappings":"4NAEaA,EAAcC,EAAAA,GAAAA,GAAH,iKASXC,EAAcD,EAAAA,GAAAA,GAAH,kFAMXE,EAAeF,EAAAA,GAAAA,IAAH,iFAIZG,EAAYH,EAAAA,GAAAA,EAAH,iEAEL,qBAAGI,MAAkBC,YAAYC,QAGrCC,EAAiBP,EAAAA,GAAAA,EAAH,oFAGR,qBAAGI,MAAkBC,YAAYC,Q,SCrBvCE,EAAkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChC,OACE,SAACV,EAAD,UACGU,EAAQC,KAAI,SAAAC,GAAM,OACjB,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IACED,EAAOE,aACH,kCAAoCF,EAAOE,aAC3C,qHAENC,IAAI,GACJC,MAAM,SAER,SAACZ,EAAD,UAAYQ,EAAOK,QACnB,UAACT,EAAD,YAAgB,0CAAyBI,EAAOM,eAXhCN,EAAOO,iB,2DCVpBC,EAAc,mCAAG,WAAMC,GAAN,kGAEHC,EAAAA,EAAAA,IAAA,iBAAkBD,EAAlB,aAFG,uBAElBE,EAFkB,EAElBA,KAFkB,kBAInBA,GAJmB,gCAM1BC,QAAQC,IAAR,MAN0B,yDAAH,sDCwB3B,EArBoB,WAClB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAQR,OANAE,EAAAA,EAAAA,YAAU,WACRX,EAAeS,GAAUG,MAAK,SAAAC,GAC5BL,EAAWK,EAAOC,WAEnB,CAACL,KAGF,8BACGF,IACC,+BACE,SAAClB,EAAD,CAAiBC,QAASiB,U,mEChBvBL,E,MAAMa,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB","sources":["components/FilmCreditsList/FilmCreditsList.style.js","components/FilmCreditsList/FilmCreditsList.jsx","services/getFilmCredits.js","pages/FilmCredits/FilmCredits.jsx","services/api.js","constants/apiConst.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CreditsList = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const CreditsItem = styled.li`\n  margin: 10px;\n  margin-bottom: 20px;\n  width: 150px;\n`;\n\nexport const CreditsImage = styled.img`\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const ActorName = styled.p`\n  margin-top: 5px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const ActorCharacter = styled.p`\n  margin-top: 5px;\n  & span {\n    font-weight: ${({ theme }) => theme.fontWeights.bold};\n  }\n`;\n","import {\n  CreditsList,\n  CreditsItem,\n  CreditsImage,\n  ActorName,\n  ActorCharacter,\n} from './FilmCreditsList.style';\n\nexport const FilmCreditsList = ({ credits }) => {\n  return (\n    <CreditsList>\n      {credits.map(credit => (\n        <CreditsItem key={credit.credit_id}>\n          <CreditsImage\n            src={\n              credit.profile_path\n                ? `https://image.tmdb.org/t/p/w500` + credit.profile_path\n                : 'https://dummyimage.com/150x225/fff/000000.png&text=%D0%9A%D1%96%D0%BD%D0%B0+%D0%BD%D0%B5+%D0%B1%D1%83%D0%B4%D0%B5!'\n            }\n            alt=\"\"\n            width=\"150\"\n          />\n          <ActorName>{credit.name}</ActorName>\n          <ActorCharacter><span>Character: </span>{credit.character}</ActorCharacter>\n        </CreditsItem>\n      ))}\n    </CreditsList>\n  );\n};\n","import { api } from './api';\n\nexport const getFilmCredits = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/credits`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { FilmCreditsList } from 'components/FilmCreditsList/FilmCreditsList';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCredits } from 'services/getFilmCredits';\n\nconst FilmCredits = () => {\n  const [Credits, setCredits] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getFilmCredits(moviesId).then(result => {\n      setCredits(result.cast);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      {Credits && (\n        <>\n          <FilmCreditsList credits={Credits} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FilmCredits;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';"],"names":["CreditsList","styled","CreditsItem","CreditsImage","ActorName","theme","fontWeights","bold","ActorCharacter","FilmCreditsList","credits","map","credit","src","profile_path","alt","width","name","character","credit_id","getFilmCredits","id","api","data","console","log","useState","Credits","setCredits","moviesId","useParams","useEffect","then","result","cast","axios","baseURL","params","api_key"],"sourceRoot":""}