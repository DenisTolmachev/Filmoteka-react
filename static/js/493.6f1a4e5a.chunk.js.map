{"version":3,"file":"static/js/493.6f1a4e5a.chunk.js","mappings":"sOAGaA,EAAqBC,EAAAA,GAAAA,IAAH,wPAclBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+CAIVG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,4JAUXK,EAAeL,EAAAA,GAAAA,OAAH,ib,mBCtBZM,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,SAACT,EAAD,WACE,SAAC,KAAD,CACEU,cAAe,CAAEC,MAAK,OAAEF,QAAF,IAAEA,EAAAA,EAAS,IACjCD,SAAU,SAACI,EAAQC,GACjBL,EAASI,GACTC,EAAQC,aAJZ,UAOE,UAACZ,EAAD,YACE,SAACI,EAAD,CAAcS,KAAK,SAAnB,UACE,SAAC,MAAD,OAEF,SAACX,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,YAAY,0B,0DC1BXC,EAAa,mCAAG,WAAMT,GAAN,kGAEFU,EAAAA,EAAAA,IAAQ,gBAAiB,CAAEC,OAAQX,IAFjC,uBAEjBY,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBC,QAAQC,IAAR,MALyB,yDAAH,sDCFbC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACI,wBACKA,EAAOC,KAAI,SAAAC,GAAK,OACb,gCAASA,EAAMC,UCkC/B,EAhCe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACVC,EAAS,UAAGN,EAAaO,IAAI,eAApB,QAA+B,GAC1B,KAAdD,GAGFlB,EAAc,CAAET,MAAO2B,EAAWE,KAAM,IAAKC,MAAK,SAAAC,GAChDN,EAAeM,EAAOnB,KAAKoB,cAG9B,CAACX,IAWJ,OADFR,QAAQC,IAAIU,IAER,4BACE,SAAC5B,EAAD,CAAWC,SAXU,SAAAC,GACvB,GAA2B,KAAvBA,EAAME,MAAMiC,OACdpB,QAAQC,IAAI,4BACP,CACL,IAAMoB,EAA6B,KAAhBpC,EAAME,MAAe,CAAEO,KAAMT,EAAME,OAAU,GAChEsB,EAAgBY,KAMuBpC,MAAOuB,EAAaO,IAAI,WAC/D,SAACb,EAAD,CAAYC,OAAQQ,S,mEC9Bbd,E,MAAMyB,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBzB,OAAQ,CACN0B,QCLmB","sources":["components/SearchBar/SearchBar.style.js","components/SearchBar/SearchBar.jsx","services/getFilmsByKey.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/api.js","constants/apiConst.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchbarContainer = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled(Form)`\n  position: relative;\n`;\n\nexport const SearchInput = styled(Field)`\n  outline: none;\n  height: 30px;\n  width: 300px;\n  border: 0;\n  border-radius: 6px;\n  padding-left: 10px;\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: block;\n  position: absolute;\n  right: 0;\n  width: 30px;\n  height: 32px;\n  border: 0;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import {\n  SearchbarContainer,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBar.style';\nimport { Formik } from 'formik';\nimport { RiSearchLine } from 'react-icons/ri';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  return (\n    <SearchbarContainer>\n      <Formik\n        initialValues={{ query: value ?? '' }}\n        onSubmit={(values, actions) => {\n          onSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        <SearchForm>\n          <SearchButton type=\"submit\">\n            <RiSearchLine />\n          </SearchButton>\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            name=\"query\"\n            placeholder=\"Search movies\"\n          />\n        </SearchForm>\n      </Formik>\n    </SearchbarContainer>\n  );\n};\n","import { api } from './api';\n\nexport const getFilmsByKey = async query => {\n  try {\n    const { data } = await api.get('/search/movie', { params: query });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export const MoviesList = ({ movies }) => {\n    return (\n        <ul>\n            {movies.map(movie => (\n                <li key={movie.id}>Some</li>\n            ))}\n        </ul>\n    )\n}","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByKey } from 'services/getFilmsByKey';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchValue, setSearchValue] = useState([]);\n\n  useEffect(() => {\n    let movieName = searchParams.get('name') ?? '';\n    if (movieName === '') {\n      return;\n    } else {\n      getFilmsByKey({ query: movieName, page: 1 }).then(result => {\n        setSearchValue(result.data.results);\n      });\n    }\n  }, [searchParams]);\n\n  const handleFormSubmit = value => {\n    if (value.query.trim() === '') {\n      console.log('enter a search value');\n    } else {\n      const nextParams = value.query !== '' ? { name: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\nconsole.log(searchValue);\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} value={searchParams.get('name')} />\n      <MoviesList movies={searchValue} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';"],"names":["SearchbarContainer","styled","SearchForm","Form","SearchInput","Field","SearchButton","Searchbar","onSubmit","value","initialValues","query","values","actions","resetForm","type","autoComplete","autoFocus","name","placeholder","getFilmsByKey","api","params","data","console","log","MoviesList","movies","map","movie","id","useSearchParams","searchParams","setSearchParams","useState","searchValue","setSearchValue","useEffect","movieName","get","page","then","result","results","trim","nextParams","axios","baseURL","api_key"],"sourceRoot":""}