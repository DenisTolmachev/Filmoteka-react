{"version":3,"file":"static/js/357.081336b5.chunk.js","mappings":"qQAGaA,EAAeC,EAAAA,GAAAA,IAAH,sGAOZC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+VAEX,qBAAGG,MAAkBC,OAAOC,WAExB,qBAAGF,MAAkBG,UAAUC,KAMtB,qBAAGJ,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOI,SAK5B,qBAAGL,MAAkBC,OAAOC,WACb,qBAAGF,MAAkBC,OAAOC,W,iDCzB3CI,EAAY,mCAAG,WAAMC,GAAN,kGAEDC,EAAAA,EAAAA,IAAA,iBAAkBD,IAFjB,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAIjBA,GAJiB,gCAMxBC,QAAQC,IAAR,MANwB,yDAAH,sDCAZC,EAAqBf,EAAAA,GAAAA,IAAH,0CAIlBgB,EAAiBhB,EAAAA,GAAAA,IAAH,kGAKdiB,EAAiBjB,EAAAA,GAAAA,GAAH,2CACZ,qBAAGG,MAAkBG,UAAUY,OAGjCC,EAAiBnB,EAAAA,GAAAA,EAAH,mKAGZ,qBAAGG,MAAkBG,UAAUC,KACjB,qBAAGJ,MAAkBC,OAAOC,WAEtC,qBAAGF,MAAkBiB,YAAYC,QAIvCC,EAAoBtB,EAAAA,GAAAA,IAAH,qJAKD,qBAAGG,MAAkBC,OAAOC,WAG5CkB,EAAyBvB,EAAAA,GAAAA,EAAH,gEACpB,qBAAGG,MAAkBG,UAAUC,KAC7B,qBAAGJ,MAAkBiB,YAAYC,QAGrCG,EAAwBxB,EAAAA,GAAAA,EAAH,gEACnB,qBAAGG,MAAkBG,UAAUC,KAIjCkB,EAAkBzB,EAAAA,GAAAA,IAAH,yFCzCf0B,EAAkB1B,EAAAA,GAAAA,IAAH,6CAIf2B,EAAc3B,EAAAA,GAAAA,EAAH,gEACT,qBAAGG,MAAkBG,UAAUC,KAC7B,qBAAGJ,MAAkBiB,YAAYC,QAGrCO,EAAa5B,EAAAA,GAAAA,GAAH,mFAMV6B,EAAa7B,EAAAA,GAAAA,GAAH,0C,SCfV8B,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,OACI,UAACL,EAAD,YACI,SAACC,EAAD,uBACA,SAACC,EAAD,UACCG,EAAOC,KAAI,SAAAC,GAAK,OACb,SAACJ,EAAD,UAA4BI,EAAMC,MAAjBD,EAAMvB,aCI1ByB,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IAAG,yCAAoCD,EAAME,aAC7CC,IAAKH,EAAMI,SAEb,UAACf,EAAD,YACE,UAACR,EAAD,WACGmB,EAAMI,MADT,IACiBJ,EAAMK,aADvB,QAGA,UAACtB,EAAD,YACE,2CACCiB,EAAMM,iBAET,UAACpB,EAAD,YACE,SAACC,EAAD,0BACA,SAACC,EAAD,UAAwBY,EAAMO,eAEhC,SAACb,EAAD,CAAQC,OAAQK,EAAML,gB,UCK9B,EA7BqB,WACnB,OAA8Ba,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAQR,OANAE,EAAAA,EAAAA,YAAU,WACRxC,EAAasC,GAAUG,MAAK,SAAAC,GAC1BL,EAAWK,QAEZ,CAACJ,KAGF,8BACGF,IACC,iCACE,SAACV,EAAD,CAAWC,MAAOS,KAClB,UAAC9C,EAAD,YACE,SAACE,EAAD,CAAWmD,GAAI,OAAf,mBACA,SAACnD,EAAD,CAAWmD,GAAI,UAAf,yBAGF,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,a,mECzBC5C,E,MAAM6C,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB","sources":["pages/MovieDetails/MovieDetails.style.js","services/getDataFilms.js","components/MovieCard/MovieCard.styled.js","components/Genres/Genres.style.js","components/Genres/Genres.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","constants/apiConst.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsLinks = styled.div`\n  display: flex;\n  justify-content: start;\n  padding: 20px 0;\n  gap: 5px;\n`;\n\nexport const LinkStyle = styled(NavLink)`\n  display: flex;\n  color: ${({ theme }) => theme.colors.primary};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  padding: 5px;\n  border-radius: 5px;\n  text-transform: uppercase;\n\n  &.active {\n    background-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.white};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.colors.primary};\n  }\n`;","import { api } from './api';\n\nexport const getDataFilms = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieCardImage = styled.img`\n  width: 300px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const MovieCardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.ml1};\n`;\n\nexport const MovieCardScore = styled.p`\n  padding-top: 30px;\n  padding-bottom: 15px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\n  & span {\n    font-weight: ${({ theme }) => theme.fontWeights.bold};\n  }\n`;\n\nexport const MovieCardOverwiew = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\n`;\n\nexport const MovieCardOverwiewTitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const MovieCardOverwiewText = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  margin-top: 10px;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\n\nexport const GenresContainer = styled.div`\n  margin-top: 15px;\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const GenresList = styled.ul`\nlist-style-type: circle;\nmargin: 10px 20px;\npadding: 0;\n`;\n\nexport const GenresItem = styled.li`\nmargin-top: 5px;\n`;\n","import { GenresContainer, GenresTitle, GenresList, GenresItem } from \"./Genres.style\"\n\nexport const Genres = ({ genres }) => {\n    return (\n        <GenresContainer>\n            <GenresTitle>Genres:</GenresTitle>\n            <GenresList>\n            {genres.map(genre => (\n                <GenresItem key={genre.id}>{genre.name}</GenresItem>\n            ))}\n            </GenresList>\n        </GenresContainer>\n    )\n}","import {\n  MovieCardContainer,\n  MovieCardImage,\n  MovieCardTitle,\n  MovieCardScore,\n  MovieCardOverwiew,\n  MovieCardOverwiewTitle,\n  MovieCardOverwiewText,\n  CardInformation,\n} from './MovieCard.styled';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <MovieCardContainer>\n      <MovieCardImage\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <CardInformation>\n        <MovieCardTitle>\n          {movie.title}({movie.release_date})\n        </MovieCardTitle>\n        <MovieCardScore>\n          <span>User Score: </span>\n          {movie.vote_average}\n        </MovieCardScore>\n        <MovieCardOverwiew>\n          <MovieCardOverwiewTitle>Overview: </MovieCardOverwiewTitle>\n          <MovieCardOverwiewText>{movie.overview}</MovieCardOverwiewText>\n        </MovieCardOverwiew>\n        <Genres genres={movie.genres} />\n      </CardInformation>\n    </MovieCardContainer>\n  );\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { DetailsLinks, LinkStyle } from './MovieDetails.style';\nimport { Suspense, useEffect, useState } from 'react';\nimport { getDataFilms } from 'services/getDataFilms';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { LoaderSpinner } from 'components/common/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [MovieId, setMovieId] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getDataFilms(moviesId).then(result => {\n      setMovieId(result);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      {MovieId && (\n        <>\n          <MovieCard movie={MovieId} />\n          <DetailsLinks>\n            <LinkStyle to={'cast'}>Cast</LinkStyle>\n            <LinkStyle to={'reviews'}>Reviews</LinkStyle>\n          </DetailsLinks>\n\n          <Suspense fallback={<LoaderSpinner />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';"],"names":["DetailsLinks","styled","LinkStyle","NavLink","theme","colors","primary","fontSizes","m","white","getDataFilms","id","api","data","console","log","MovieCardContainer","MovieCardImage","MovieCardTitle","ml1","MovieCardScore","fontWeights","bold","MovieCardOverwiew","MovieCardOverwiewTitle","MovieCardOverwiewText","CardInformation","GenresContainer","GenresTitle","GenresList","GenresItem","Genres","genres","map","genre","name","MovieCard","movie","src","poster_path","alt","title","release_date","vote_average","overview","useState","MovieId","setMovieId","moviesId","useParams","useEffect","then","result","to","Suspense","fallback","Loader","axios","baseURL","params","api_key"],"sourceRoot":""}