{"version":3,"file":"static/js/619.6bfd3d16.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.style.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.style.js","components/SearchBar/SearchBar.jsx","services/getFilmsByKey.js","pages/Movies/Movies.jsx","services/api.js","constants/apiConst.js","utils/toastState.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListList = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const MovieListItem = styled.li`\n  cursor: pointer;\n  margin: 10px;\n  margin-bottom: 20px;\n  //flex-basis: calc((100% - 10px) / 5);\n  transform: translateY(0);\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: translateY(-3%);\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const MovieListItemTitle = styled.p`\nwidth: 309px;\ntext-decoration: none;\ncolor: black;\nfont-weight: ${({ theme }) => theme.fontWeights.bold};\nfont-size: ${({ theme }) => theme.fontSizes.m};\n`;\n\nexport const MovieListImage = styled.img`\n  width: 309px;\n  height: 449px;\n  text-decoration: none;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const ErrorFindMessage = styled.div`\ntext-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.ml};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.primary};;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieListList,\n  MovieListItem,\n  MovieListItemTitle,\n  MovieListImage,\n  ErrorFindMessage,\n} from './MoviesList.style';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieListList>\n        {movies.length !== 0 ? (\n          movies.map(movie => (\n            <MovieListItem key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieListImage\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500` + movie.poster_path\n                      : 'https://dummyimage.com/309x449/fff/000000.png&text=%D0%9A%D1%96%D0%BD%D0%B0+%D0%BD%D0%B5+%D0%B1%D1%83%D0%B4%D0%B5!'\n                  }\n                  alt={movie.title}\n                />\n              </Link>\n              <MovieListItemTitle>{movie.title}</MovieListItemTitle>\n            </MovieListItem>\n          ))\n        ) : (\n          <ErrorFindMessage>\n            Films not found, enter the correct request!\n          </ErrorFindMessage>\n        )}\n      </MovieListList>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchbarContainer = styled.div`\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled(Form)`\n  position: relative;\n`;\n\nexport const SearchInput = styled(Field)`\n  outline: none;\n  height: 30px;\n  width: 300px;\n  border: 0;\n  border-radius: 6px;\n  padding-left: 10px;\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: block;\n  position: absolute;\n  right: 0;\n  width: 30px;\n  height: 32px;\n  border: 0;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import {\n  SearchbarContainer,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBar.style';\nimport { Formik } from 'formik';\nimport { RiSearchLine } from 'react-icons/ri';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  return (\n    <SearchbarContainer>\n      <Formik\n        initialValues={{ query: value ?? '' }}\n        onSubmit={(values, actions) => {\n          onSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        <SearchForm>\n          <SearchButton type=\"submit\">\n            <RiSearchLine />\n          </SearchButton>\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            name=\"query\"\n            placeholder=\"Search movies\"\n          />\n        </SearchForm>\n      </Formik>\n    </SearchbarContainer>\n  );\n};\n","import { api } from './api';\nimport { toastError } from 'utils/toastState';\n\nexport const getFilmsByKey = async query => {\n  try {\n    const { data } = await api.get('/search/movie', { params: query });\n    return data;\n  } catch (error) {\n    toastError();\n  }\n};\n","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByKey } from 'services/getFilmsByKey';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { toastWarning } from 'utils/toastState';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchValue, setSearchValue] = useState([]);\n\n  useEffect(() => {\n    let movieName = searchParams.get('name') ?? '';\n    if (movieName === '') {\n      return;\n    } else {\n      getFilmsByKey({ query: movieName, page: 1 }).then(result => {\n        setSearchValue(result.results);\n      });\n    }\n  }, [searchParams]);\n\n  const handleFormSubmit = value => {\n    if (value.query.trim() === '') {\n      toastWarning()\n    } else {\n      const nextParams = value.query !== '' ? { name: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} value={searchParams.get('name')} />\n      <MoviesList movies={searchValue} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiConst';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '28d5cd374d4ca5faf90ef748b7c7ae26';","import { toast } from 'react-toastify';\n\nexport const toastWarning =() => {\n    toast.warn('Enter a movie title!', {\n        position: \"top-center\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}\n\nexport const toastError =() => {\n    toast.error('Service error!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n}"],"names":["MovieListList","styled","MovieListItem","MovieListItemTitle","theme","fontWeights","bold","fontSizes","m","MovieListImage","ErrorFindMessage","ml","colors","primary","MoviesList","movies","location","useLocation","length","map","movie","to","id","state","from","src","poster_path","alt","title","SearchbarContainer","SearchForm","Form","SearchInput","Field","SearchButton","Searchbar","onSubmit","value","initialValues","query","values","actions","resetForm","type","autoComplete","autoFocus","name","placeholder","getFilmsByKey","api","params","data","toastError","useSearchParams","searchParams","setSearchParams","useState","searchValue","setSearchValue","useEffect","movieName","get","page","then","result","results","trim","toastWarning","nextParams","axios","baseURL","api_key","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}